# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    CURRENT_SITE_MAILER: '%env(CURRENT_SITE_MAILER)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\KafkaSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    App\Service\UploadFileService:
        arguments:
            - "%kernel.project_dir%"

    App\Controller\Controller:
        arguments:
            - "%kernel.project_dir%"

    Liip\ImagineBundle\Service\FilterService:
        alias: 'liip_imagine.service.filter'

    imagine.cache.resolver.imagepathresolverservice:
        class: App\Service\ImagePathResolverService
        arguments:
            #$webRootDir: "%kernel.project_dir%"
        tags:
            - { name: "liip_imagine.cache.resolver", resolver: ImagePathResolverService }

    app.imagine.cdn_data_loader:
        class: Liip\ImagineBundle\Binary\Loader\StreamLoader
        arguments:
            - '' # if you store full path in the database
        tags:
            - { name: 'liip_imagine.binary.loader', loader: 'data_loader' }

    my_listener.locale:
        class:  App\EventListener\LocaleListener
        arguments: ['%kernel.default_locale%']
        tags:
            - {name: kernel.event_subscriber}
            - {name: kernel.event_listener, event: kernel.request,  method: onKernelRequest }

    #App\Validator\ArtistValidateInterface:  '@App\Validator\ArtistValidate'
    #App\Validator\ArtistValidateInterface:  '@App\Validator\ImageUploadValidate'